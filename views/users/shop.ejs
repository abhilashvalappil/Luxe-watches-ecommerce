

<%- include('../layouts/navbar.ejs') %>

<style>
  .low-stock {
          color: red;
          font-weight: bold;
      }

             .out-of-stock {
          position: absolute;
          top: 10px;
          right: 10px;
          background-color: rgba(255, 0, 0, 0.7);
          color: white;
          padding: 5px 10px;
          font-size: 12px;
          font-weight: bold;
          text-transform: uppercase;
          border-radius: 3px;
          z-index: 10;
      }
  
      .product__item__pic img.out-of-stock-image {
          opacity: 0.6;
      }


/**** wishlist icon style ******/

.wishlist-link {
position: relative;
display: inline-block;
}

.wishlist-icon {
font-size: 20px;
color: #888; 
transition: color 0.3s ease-in-out;
}

.wishlist-link:hover .wishlist-icon {
color: #ff0000;  
}

.added-to-wishlist {
color: #ff0000;  
}

/* offferrr */

.original-price {
  text-decoration: line-through;
  color: #888;
  margin-right: 10px;
}

.offer-details {
  color: #ff6600;
  font-weight: bold;
}

.low-stock {
  color: red;
  font-weight: bold;
}

</style>

<body>
    <!-- Page Preloder -->
    <div id="preloder">
        <div class="loader"></div>
    </div>

    <!-- Offcanvas Menu Begin -->
    <div class="offcanvas-menu-overlay"></div>
    <div class="offcanvas-menu-wrapper">
        <div class="offcanvas__option">
            <div class="offcanvas__links">
                <a href="#">Sign in</a>
                <a href="#">FAQs</a>
            </div>
            <!-- <div class="offcanvas__top__hover">
                <span>Usd <i class="arrow_carrot-down"></i></span>
                <ul>
                    <li>USD</li>
                    <li>EUR</li>
                    <li>USD</li>
                </ul>
            </div> -->
        </div>
        <div class="offcanvas__nav__option">
            <a href="#" class="search-switch"><img src="img/icon/search.png" alt=""></a>
            <a href="#"><img src="img/icon/heart.png" alt=""></a>
            <a href="#"><img src="img/icon/cart.png" alt=""> <span>0</span></a>
            <div class="price">$0.00</div>
        </div>
        <div id="mobile-menu-wrap"></div>
        <div class="offcanvas__text">
            <p>Free shipping, 30-day return or refund guarantee.</p>
        </div>
    </div>
    <!-- Offcanvas Menu End -->

    <!-- Breadcrumb Section Begin -->
    <section class="breadcrumb-option">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="breadcrumb__text">
                        <h4>Shop</h4>
                        <div class="breadcrumb__links">
                            <a href="/home">Home</a>
                            <span>Shop</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Breadcrumb Section End -->
     
    <!-- Shop Section Begin -->
<section class="shop spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-3">
                <div class="shop__sidebar">
                    <div class="shop__sidebar__search">
                        <form id="searchForm" action="#" onsubmit="handleSearch(event)">
                            <input type="text" id="searchInput" placeholder="Search..." required>
                            <button type="submit"><span class="icon_search"></span></button>
                        </form>
                    </div>
                    <div class="shop__sidebar__accordion">
                        <div class="accordion" id="accordionExample">
                          <div class="card">
                            <div class="card-heading">
                                <a data-toggle="collapse" data-target="#collapseOne">Categories</a>
                            </div>
                            <form id="filterForm">
                            <div id="collapseOne" class="collapse show" data-parent="#accordionExample">
                                <div class="card-body">
                                  <div id="panelsStayOpen-collapseCategory" class="accordion-collapse collapse show"
                                  aria-labelledby="headingCategory">
                                  <div class="accordion-body">
                                    <div>
                                      <% categoryData.forEach(category => { %>
                                        <div class="form-check">
                                          <input class="form-check-input" type="checkbox" id="CategoryCheckbox_<%= category.name %>" name="categories" value="<%= category.name %>" />
                                          <label class="form-check-label" for="CategoryCheckbox_<%= category.name %>"><%= category.name %></label>
                                        </div>
                                        <% }) %>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                            </div>
                          </div>
                          <div class="card">
                            <div class="card-heading">
                                <a data-toggle="collapse" data-target="#collapseTwo">Branding</a>
                            </div>
                            <div id="collapseTwo" class="collapse show" data-parent="#accordionExample">
                                <div class="card-body">
                                  <div id="panelsStayOpen-collapseBrands" class="accordion-collapse collapse show"
                                  aria-labelledby="headingBrands">
                                  <div class="accordion-body">
                                    <div>
                                      <% brandData.forEach(brand => { %>
                                      <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="brandCheckbox_<%= brand.brandName %>" name="brands" value="<%= brand.brandName %>" />
                                        <label class="form-check-label" for="brandCheckbox_<%= brand.brandName %>"><%= brand.brandName %></label>
                                      </div>
                                      <% }) %>
                                    </div>
                                  </div>
                                </div>
                                </div>
                            </div>
                          </div>
                          <div class="card">
                            <div class="card-heading">
                                <a data-toggle="collapse" data-target="#collapseTwo">Strap Color</a>
                            </div>
                            <div id="collapseTwo" class="collapse show" data-parent="#accordionExample">
                                <div class="card-body">
                                  <div id="panelsStayOpen-collapseBrands" class="accordion-collapse collapse show"
                                  aria-labelledby="headingBrands">
                                  <div class="accordion-body">
                                    <div>
                                      <% strapColor.forEach(strap => { %>
                                      <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="strapCheckbox_<%= strap %>" name="strap" value="<%=strap%>" />
                                        <label class="form-check-label" for="strapCheckbox_<%= strap %>"><%= strap %></label>
                                      </div>
                                      <% }) %>
                                    </div>
                                  </div>
                                </div>
                                </div>
                            </div>
                          </div>
                          <div class="card">
                            <div class="card-heading">
                                <a data-toggle="collapse" data-target="#collapseTwo">Dial Color</a>
                            </div>
                            <div id="collapseTwo" class="collapse show" data-parent="#accordionExample">
                                <div class="card-body">
                                  <div id="panelsStayOpen-collapseBrands" class="accordion-collapse collapse show"
                                  aria-labelledby="headingBrands">
                                  <div class="accordion-body">
                                    <div>
                                      <% dialColor.forEach(dial => { %>
                                      <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="dialCheckbox_<%= dial %>" name="dial" value="<%= dial %>" />
                                        <label class="form-check-label" for="dialCheckbox_<%= dial %>"><%= dial %></label>
                                      </div>
                                      <% }) %>
                                    </div>
                                  </div>
                                </div>
                                </div>
                            </div>
                          </div>
                          <div class="card">
                            <div class="card-heading">
                                <a data-toggle="collapse" data-target="#collapseThree">Filter Price</a>
                            </div>
                            <div id="collapseThree" class="collapse show" data-parent="#accordionExample">
                                <div class="card-body">
                                  <div id="panelsStayOpen-collapseThree" class="accordion-collapse collapse show"
                                  aria-labelledby="headingThree">
                                  <div class="accordion-body">
                                    <div class="range">
                                      <input type="range" class="form-range" id="priceRange" 
                                        min="<%= Math.min(...products.map(p => p.price)) %>" 
                                        max="<%= Math.max(...products.map(p => p.price)) %>" 
                                        oninput="updateMaxPrice()" />
                                    </div>
                                    <div class="row mb-3">
                                      <div class="col-6">
                                        <p class="mb-0">Min</p>
                                        <div class="form-outline">
                                          <input type="number" id="minPrice" name="minPrice"
                                            class="form-control" value="<%= Math.min(...products.map(p => p.price)) %>" readonly />
                                          <label class="form-label" for="minPrice">₹ <%= Math.min(...products.map(p => p.price)) %></label>
                                        </div>
                                      </div>
                                      <div class="col-6">
                                        <p class="mb-0">Max</p>
                                        <div class="form-outline">
                                          <input type="number" id="maxPrice" name="maxPrice"
                                            class="form-control" value="<%= Math.max(...products.map(p => p.price)) %>" readonly />
                                          <label class="form-label" for="maxPrice">₹ <%= Math.max(...products.map(p => p.price)) %></label>
                                        </div>
                                      </div>
                                    </div>
                                    
                                  </div>
                                </div>
                                </div>
                            </div>
                            
                          </div>

                          <button type="submit" id="applyFilter" class="btn btn-white w-100 border border-secondary">Apply</button>
                        </form>           
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-9">
                <div class="shop__product__option">
                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-sm-6">
                            <div class="shop__product__option__left">
                                <!-- <p>Showing 1–12 of 126 results</p> -->
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-6">
                            <div class="shop__product__option__right">
                                <p>Sort by Price:</p>
                                <select id="sortSelect" onchange="sortPrice()">
                                  <option value="low_to_high">Price: Low To High</option>
                                  <option value="high_to_low">Price: High to Low</option>          
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row product-grids">
                    <% products.forEach(function(product){ %>
                    <div class="col-lg-4 col-md-6 col-sm-6">
                        <div class="product__item">
                          <% if (product.stock === 0) { %>
                            <div class="out-of-stock">Out of Stock</div>
                            <% } %>
                                <ul class="product__hover">
                                  <li>
                                    <a href="#" onclick="handleWishlistClick(event, this, '<%= product._id %>')" class="wishlist-link" data-product-id="<%= product._id %>">
                                      <i class="fa fa-heart-o wishlist-icon"></i>
                                    </a>
                                  </li>
                          
                                  <!-- <li><a href="#" onclick="addToWishlist(' ')"><i class="fa fa-heart-o"></i></a></li> -->
                                    <li><a href="/shopdetails?productId=<%= product._id %>"><img src="/uploadedImages/<%= product.images[0] %>" alt=""></a></li>
                                </ul>
                            <div class="product__item__text">
                                <h6><%=product.name%></h6>
                                <!-- <div class="rating">
                                    <i class="fa fa-star-o"></i>
                                    <i class="fa fa-star-o"></i>
                                    <i class="fa fa-star-o"></i>
                                    <i class="fa fa-star-o"></i>
                                    <i class="fa fa-star-o"></i>
                                </div> -->

                                <% if (product.stock === 0) { %>
                                  <h5>₹<%= product.price %></h5>
                              <% } else { %>
                                  <% if (product.offerPercent) { %>
                                      <h5>₹<%= product.discountedPrice.toFixed(2) %> <span class="original-price">₹<%= product.price %></span></h5>
                                      <p class="offer-percent">Save <%= product.offerPercent %>%</p>
                                  <% } else { %>
                                      <h5>₹<%= product.price %></h5>
                                  <% } %>
                              <% } %>

                                 
                                <!-- <h5>₹<%=product.price%></h5> -->
                                <% if(product.stock <= 5 && product.stock > 0){  %>
                                    <p class="low-stock">Only <%= product.stock %> stock left</p>
                                    <% } %>
                            </div>
                        </div>
                    </div>
                    <%})%>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                      <div class="product__pagination">
                        <% if (currentPage > 1) { %>
                          <a href="?page=<%= currentPage - 1 %>">&laquo;</a>
                        <% } %>
                  
                        <% for (let i = 1; i <= totalPages; i++) { %>
                          <% if (i === currentPage) { %>
                            <a class="active" href="?page=<%= i %>"><%= i %></a>
                          <% } else { %>
                            <a href="?page=<%= i %>"><%= i %></a>
                          <% } %>
                        <% } %>
                  
                        <% if (currentPage < totalPages) { %>
                          <a href="?page=<%= currentPage + 1 %>">&raquo;</a>
                        <% } %>
                      </div>
                    </div>
                  </div>
                  
            </div>
        </div>
    </div>
</section>
<!-- Shop Section End -->

<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

<!-- <div class="col-lg-6 col-md-6 col-sm-6">
  <div class="shop__product__option__right">
    <p>Sort by Price:</p>
    <select id="sortSelect" onchange="sortPrice()">
      <option value="low_to_high">Price: Low To High</option>
      <option value="high_to_low">Price: High to Low</option>          
    </select>
  </div>
</div> -->

<script>
  function sortPrice() {
    const selectedOption = document.getElementById('sortSelect').value;

    fetch('/sort-products', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ selectedOption })
    })
    .then(response => response.json())
    .then(data => {
      displayProducts(data.products)
    })
    .catch(error => {
      console.error('Error:', error);
    });
  }
 

async function initializeWishlistIcons() {
  try {
    const response = await fetch('/get-wishlist');
    
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    
    const contentType = response.headers.get("content-type");
    if (!contentType || !contentType.includes("application/json")) {
      throw new Error("Oops! Received non-JSON response from the server");
    }

    const data = await response.json();
    if (data.success) {
      data.wishlist.forEach(productId => {
        const icon = document.querySelector(`.wishlist-link[data-product-id="${productId}"] .wishlist-icon`);
        if (icon) {
          icon.classList.add('added-to-wishlist');
        }
      });
    } else {
      console.error('Wishlist initialization failed:', data.message);
    }
  } catch (error) {
    console.error('Error initializing wishlist icons:', error.message);
    if (error instanceof SyntaxError) {
      console.error('Received invalid JSON. Server response:', await response.text());
    }
  }
}



document.addEventListener('DOMContentLoaded', initializeWishlistIcons);

  //*********Handle wishlist
  function handleWishlistClick(event,element,productId){
    event.preventDefault();

    const icon = element.querySelector('.wishlist-icon');
    const isAdded = !icon.classList.contains('added-to-wishlist');

    if(isAdded){
      addToWishlist(productId,icon)
    }else{
      removeFromWishlist(productId,icon)
    }
  }



  //********Add to wishlist***********
  
  async function addToWishlist(productId,icon){
    try {
      const response = await fetch('/addToWishlist',{
        method: 'POST',
        headers:{
          'Content-Type' : 'application/json'
        },
        body: JSON.stringify({productId})
      })

      const data = await response.json();

      if(data.success){
        icon.classList.add('added-to-wishlist');
        showToast("Added to your wishlist!", "#4caf50");
      }else{
        showToast("Failed to add to wishlist. Please try again.", "#f44336");
      }
      
    } catch (error) {
      console.error(error)
      showToast("An error occurred. Please try again.", "#f44336");
    }
  }

  /**********remove wishlist ********/

  async function removeFromWishlist(productId,icon){
    try {
      const response = await fetch('/removeFromWishlist',{
        method: 'POST',
        headers:{
          'Content-Type' : 'application/json'
        },
        body: JSON.stringify({productId})
      })

      const data = await response.json();
      if(data.success){
        icon.classList.remove('added-to-wishlist');
        showToast("Removed from your wishlist!", "#f44336");
      }else{
        showToast("Failed to remove from wishlist. Please try again.", "#f44336");
      }
      
    } catch (error) {
      console.error(error)
    }
  }

  //****Toast function ******/
  function showToast(message, backgroundColor) {
  Toastify({
    text: message,
    duration: 3000,
    gravity: "bottom",
    position: "center",
    style: {
      background: backgroundColor,
    },
    close: true,
  }).showToast();
}

async function handleSearch(event) {
    event.preventDefault(); // Prevent the default form submission

    const searchTerm = document.getElementById('searchInput').value;
    console.log('the searchhhhh',searchTerm)

    if (!searchTerm) {
        // If no search term, fetch all products
        await fetchAllProducts();
        return;
    }

    // Send data to the server
    await fetch('/search', { // Change '/search' to your actual endpoint
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ query: searchTerm }),
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    })
    .then(data => {
      if (data.success) {
      displayProducts(data.products)
        console.log('Search results:', data.products);
      } else {
      console.log('No products found');
      displayProducts([]); // Clear the product display if no results
    }
  })
    .catch(error => {
        console.error('There was a problem with the fetch operation:', error);
    });
}

async function fetchAllProducts() {
    const response = await fetch('/all-products'); // Adjust the endpoint accordingly
    const data = await response.json();
    displayProducts(data.products);
}

document.getElementById('searchInput').addEventListener('input', async (event) => {
    const query = event.target.value;

    if (query === '') {
        // If the search input is cleared, fetch all products
        await fetchAllProducts();
    } else {
        // Otherwise, perform the search
        await handleSearch(event);
    }
});
document.getElementById('clearSearch').addEventListener('click', async () => {
    document.getElementById('searchInput').value = ''; // Clear the input
    await fetchAllProducts(); // Fetch and display all products
});

 


document.getElementById('filterForm').addEventListener('submit', function(event) {
    event.preventDefault(); 

    let selectedCategories = Array.from(document.querySelectorAll('input[name="categories"]:checked')).map(cb => cb.value);
    let selectedBrands = Array.from(document.querySelectorAll('input[name="brands"]:checked')).map(cb => cb.value);
    let selectedStrapColors = Array.from(document.querySelectorAll('input[name="strap"]:checked')).map(cb => cb.value);
    let selectedDialColors = Array.from(document.querySelectorAll('input[name="dial"]:checked')).map(cb => cb.value);

    let minPrice = document.getElementById('minPrice').value;
    let maxPrice = document.getElementById('maxPrice').value;


  const data=new URLSearchParams({
    maxPrice,
    selectedDialColors,
    selectedStrapColors,
    selectedBrands,
    selectedCategories 
    
  })
  

  fetch(`/filter-product?${data.toString()}`,{
    method:'POST',
    headers:{'Content-Type':"application/json"},
  })
  .then(response=>response.json())
  .then(response=>{
    if (response.success) {
        displayProducts(response.products)
        
    }
  })
})


function displayProducts(products) {
  const productsGrid = document.querySelector('.product-grids');
  productsGrid.innerHTML = '';

  if (products.length === 0) {
    productsGrid.innerHTML = `
      <div class="no-products">
        <p>No products found</p>
      </div>
    `;
    return;
  }

  products.forEach(product => {
    const productHTML = `
      <div class="col-lg-4 col-md-6 col-sm-6">
        <div class="product__item">
          <ul class="product__hover">
            <li><a href="/shopdetails?productId=${product._id}"><img src="/uploadedImages/${product.images[0]}" alt=""></a></li>
          </ul>
          <div class="product__item__text">
            <h6>${product.name}</h6>
            <div class="rating">
              <i class="fa fa-star-o"></i>
              <i class="fa fa-star-o"></i>
              <i class="fa fa-star-o"></i>
              <i class="fa fa-star-o"></i>
              <i class="fa fa-star-o"></i>
            </div>
            <h5>₹${product.price}</h5>
            ${product.stock <= 5 && product.stock > 0 ? `<p class="low-stock">Only ${product.stock} stock left</p>` : ''}
          </div>
        </div>
      </div>
    `;
    productsGrid.innerHTML += productHTML;
  });
}

function updateMaxPrice() {
    let priceRange = document.getElementById('priceRange').value;
    document.getElementById('maxPrice').value = priceRange;
  }

</script>

 <%- include('../layouts/footer.ejs') %>    
 