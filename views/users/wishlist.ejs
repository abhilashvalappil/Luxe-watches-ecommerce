
 
<%- include('../layouts/navbar.ejs') %>
    
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Wishlist</title>
    <!-- Add Toastify CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <!-- Add Toastify JS -->
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
    <div class="container mt-5">
        <div class="row">
          <div class="col-md-3">
            <%- include('../layouts/sidebar.ejs') %>
          </div>
          
          <div class="col-md-9">
            <div class="container">
                <h1>My Wishlist</h1>
                <table class="table table-striped" id="wishlistTable">
                    <thead>
                        <tr>
                            <th>Product</th>
                            <th>Status</th>
                            <th>Price</th>
                            <th>Add to Cart</th>
                            <th>Remove</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% products.forEach(product => { %>
                            <tr data-product-id="<%= product._id %>">
                                <td>
                                    <% if (product.images && product.images.length > 0) { %>
                                        <img src="/uploadedImages/<%= product.images[0] %>" alt="<%= product.name %>" width="50" height="50" class="me-2">
                                    <% } else { %>
                                        <img src="/path/to/placeholder-image.jpg" alt="No image available" width="50" height="50" class="me-2">
                                    <% } %>
                                    <%= product.name %>
                                </td>
                                <td>
                                    <% if (product.stock > 0) { %>   
                                        In Stock
                                    <% } else { %>
                                        Out of Stock
                                    <% } %>
                                </td>  
                                <td>â‚¹<%= product.price %></td>
                                <td>
                                    <button class="btn btn-primary addCart-btn">Add</button>
                                </td>
                                <td>
                                    <button class="btn btn-danger remove-wishlist-btn" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Remove">
                                        <i class="fa fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>

                <nav aria-label="Page navigation">
                    <ul class="pagination">
                        <% if (page > 1) { %>
                            <li class="page-item">
                                <a class="page-link" href="/wishlist?page=<%= page - 1 %>&limit=<%= limit %>" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                        <% } %>
                        
                        <% for (let i = 1; i <= totalPages; i++) { %>
                            <li class="page-item <%= i === page ? 'active' : '' %>">
                                <a class="page-link" href="/wishlist?page=<%= i %>&limit=<%= limit %>"><%= i %></a>
                            </li>
                        <% } %>
                
                        <% if (page < totalPages) { %>
                            <li class="page-item">
                                <a class="page-link" href="/wishlist?page=<%= page + 1 %>&limit=<%= limit %>" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        <% } %>
                    </ul>
                </nav>
                

            </div>
            </div>
        </div>
    </div>
    <div class="mt-5"></div>
    

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        const wishlistTable = document.getElementById('wishlistTable');
        const wishlistTableBody = wishlistTable.getElementsByTagName('tbody')[0];

        function addProductToWishlist(product) {
            const newRow = wishlistTableBody.insertRow();

            const productCell = newRow.insertCell(0);
            const productImage = document.createElement('img');
            productImage.src = product.image;
            productImage.alt = product.name;
            productImage.width = 50;
            productImage.height = 50;
            productImage.classList.add('me-2');
            productCell.appendChild(productImage);
            productCell.appendChild(document.createTextNode(product.name));

            newRow.insertCell(1).textContent = product.status;
            newRow.insertCell(2).textContent = product.price;

            const addToCartCell = newRow.insertCell(3);
            const addToCartButton = document.createElement('button');
            addToCartButton.classList.add('btn', 'btn-primary');
            addToCartButton.textContent = 'Add';
            addToCartCell.appendChild(addToCartButton);

            const removeCell = newRow.insertCell(4);
            const removeButton = document.createElement('button');
            removeButton.classList.add('btn', 'btn-danger');
            removeButton.setAttribute('data-bs-toggle', 'tooltip');
            removeButton.setAttribute('data-bs-placement', 'bottom');  
            removeButton.setAttribute('title', 'Delete');
        
            const removeIcon = document.createElement('i');
            removeIcon.classList.add('fa', 'fa-trash');
            removeButton.appendChild(removeIcon);
            removeButton.addEventListener('click', function() {
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'No, cancel!',
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        newRow.remove();
                        Swal.fire(
                            'Deleted!',
                            'Your item has been deleted.',
                            'success'
                        );
                    }
                });
            });
            removeCell.appendChild(removeButton);
            const tooltip = new bootstrap.Tooltip(removeButton);
        }

        // const product1 = {
        //     image: 'product1.jpg',
        //     name: 'Product 1',
        //     status: 'In Stock',
        //     price: '$19.99'
        // };

        addProductToWishlist();
    </script>
</body>
</html>


<script>
    document.addEventListener('DOMContentLoaded', () => {
        document.getElementById('wishlistTable').addEventListener('click', async function (event) {
            if (event.target.classList.contains('addCart-btn')) {
                event.preventDefault();
                
                const row = event.target.closest('tr');
                const productId = row.getAttribute('data-product-id');
                

                try {
                    const response = await fetch('/addToCart', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ productId })
                    });

                    if (response.ok) {
                        await fetch('/removeFromWishlist', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ productId }),
                    });
                    Swal.fire({
                        icon: 'success',
                        title: 'Added to Cart',
                        text: 'Product has been successfully added to your cart!',
                        showConfirmButton: true,
                        confirmButtonText: 'View Cart'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = '/cart';
                        }
                    });
                } else {
                    Swal.fire({
                    icon: 'error',
                    title: 'Failed to Add',
                    text: 'There was a problem adding the item to your cart.',
                    showConfirmButton: true
                });
                }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An unexpected error occurred. Please try again later.',
                        showConfirmButton: true
                    });
                }
            }

            if (event.target.classList.contains('remove-wishlist-btn')) {
                event.preventDefault();
                
                const row = event.target.closest('tr');
                const productId = row.getAttribute('data-product-id');
                
                const result = await Swal.fire({
                    title: 'Are you sure?',
                    text: 'Do you really want to remove this product from your wishlist?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, remove it!',
                    cancelButtonText: 'No, cancel!'
                });

                if (result.isConfirmed) {
                    try {
                        const response = await fetch('/removeFromWishlist', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ productId })
                        });

                        if (response.ok) {
                            row.remove();  
                            showToast('Product removed from wishlist', '#f44336');
                        } else {
                            showToast('Failed to remove product from wishlist', '#f44336');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        showToast('An error occurred. Please try again.', '#f44336');
                    }
                }
            }
            
        });
    });

    function showToast(message, backgroundColor) {
        Toastify({
            text: message,
            duration: 3000,
            gravity: 'bottom',
            position: 'center',
            style: {
                background: backgroundColor,
            },
            close: true,
        }).showToast();
    }

</script>

    