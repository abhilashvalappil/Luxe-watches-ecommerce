<%- include('../layouts/navbar.ejs') %>

<body>
    <!-- Page Preloder -->
    <div id="preloder">
        <div class="loader"></div>
    </div>

    <!-- Offcanvas Menu Begin -->
    <div class="offcanvas-menu-overlay"></div>

    <!-- Breadcrumb Section Begin -->
    <section class="breadcrumb-option">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="breadcrumb__text">
                        <h4>Shopping Cart</h4>
                        <div class="breadcrumb__links">
                            <a href="/home">Home</a>
                            <a href="/shop">Shop</a>
                            <span>Shopping Cart</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Breadcrumb Section End -->

    <!-- Shopping Cart Section Begin -->
    <section class="shopping-cart spad">
        <div class="container">
            <% if (userCart.length === 0) { %>
                <div class="empty-cart-message">
                    <h3>Your cart is empty</h3>
                    <a href="/shop" class="primary-btn">Continue Shopping</a>
                </div>
            <% } else { %>
            <div class="row">
                <div class="col-lg-8">
                    <div class="shopping__cart__table">
                        <table>
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th>Quantity</th>
                                    <th>Total</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                <% userCart.forEach(item => { %>
                                    <tr>
                                        <td class="product__cart__item">
                                            <div class="product__cart__item__pic">
                                                <img src="/uploadedImages/<%= item.productDetails.images[0] %>" alt="">
                                            </div>
                                            <div class="product__cart__item__text">
                                                <h6><%= item.productDetails.name %></h6>
                                                <% if (item.offerPercent) { %>
                                                    <h5><del>₹<%= item.productDetails.price %></del> ₹<%= item.offerPrice.toFixed(2) %></h5>
                                                <% } else { %>
                                                    <h5>₹<%= item.productDetails.price %></h5>
                                                <% } %>
                                            </div>
                                        </td>
                                        <td class="quantity__item">
                                            <div class="quantity">
                                                <button class="quantity-btn decrease" onclick="updateQuantity('<%= item.productId %>', -1)">-</button>
                                                <input type="number" id="quantity-input" value="<%= Math.min(item.quantity, 5) %>" min="1" max="5" class="quantity-input" data-product-id="<%= item.productId %>" data-price="<%= item.offerPrice || item.productDetails.price %>" readonly>
                                                <button class="quantity-btn increase" onclick="updateQuantity('<%= item.productId %>', 1)">+</button>
                                            </div>
                                            <p id="error-message" style="color: red; display: none;"></p>
                                        </td>
                                        <td class="cart__price" data-product-id="<%= item.productId %>"> 
                                            <span class="price-value">₹<%= ((item.offerPrice || item.productDetails.price) * item.quantity).toFixed(2) %></span>
                                        </td>
                                        <td class="cart__close">
                                            <button class="btn btn-danger remove-from-cart" data-product-id="<%= item.productId %>">Remove</button>
                                        </td>
                                    </tr>
                                <% }) %>                            
                            </tbody>
                        </table>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-sm-6">
                            <div class="continue__btn">
                                <a href="/shop">Continue Shopping</a>
                            </div>
                        </div>
                        <!-- <div class="col-lg-6 col-md-6 col-sm-6"> -->
                            <!-- <div class="continue__btn update__btn">
                                <a href="#"><i class="fa fa-spinner"></i> Update cart</a>
                            </div> -->
                        <!-- </div> -->
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="cart__discount">
                        <!-- <h6>Discount codes</h6> -->
                        <a style="margin-bottom: 2rem;" href="/coupons" class="btn btn-primary mt-2">Available Coupons</a>
                        <form id="couponForm">
                            <input type="text" id="couponcode" placeholder="Enter Coupon Code">
                            <button type="submit" id="applyRemove-btn" >Apply</button>
                        </form>
                    </div>
                    <div class="cart__total">
                        <h6>Cart total</h6>
                        <ul>
                            <!-- <li>Subtotal <span>$ 169.50</span></li>
                            <li>Total <span>$ 169.50</span></li> -->
                            <li>Subtotal <span> <span class="subtotal-value"><%= totalPrice  %></span></span></li>
                            <li>Total <span> <span class="total-value"><%= totalPrice  %></span></span></li>
                        </ul>
                        <!-- <a href="/checkout" class="primary-btn">Proceed to checkout</a> -->
                        <a href="/checkout" class="primary-btn">Proceed to checkout</a>

                    </div>
                </div>  
            </div>
            <% } %>
        </div>
    </section>
    <!-- Shopping Cart Section End -->
    <style>
        .quantity {
            display: flex;
            align-items: center;
        }
    
        .quantity-btn {
            width: 30px;
            height: 30px;
            background-color: #f0f0f0;
            border: 1px solid #ddd;
            cursor: pointer;
        }
    
        #quantity-input {
            width: 50px;
            height: 30px;
            text-align: center;
            border: 1px solid #ddd;
            margin: 0 5px;
        }
    </style>

    <script>
        document.getElementById('couponForm').addEventListener('submit', async function(event) {
            event.preventDefault();

            const couponCode = document.getElementById('couponcode').value;
            const button = document.getElementById('applyRemove-btn');
            
            if(button.innerText === 'APPLY'){
              const response = await fetch('/apply-coupon',{
                method: 'POST',
                headers:{
                    'Content-Type' : 'application/json'
                },
                body : JSON.stringify({couponCode})
              })
            }
            
        })
    </script>

<script>
    document.querySelectorAll('.remove-from-cart').forEach(button => {
        button.addEventListener('click', async function(event) {
            event.preventDefault();
            
            const productId = this.getAttribute('data-product-id');
            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to remove this item from the cart?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, remove it!',
                cancelButtonText: 'No, keep it'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        const response = await fetch('/removefromcart', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ productId })
                        });
    
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
    
                        const data = await response.json();
    
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: data.message
                            }).then(() => {
                                window.location.href = '/cart';
                            });
                        } else {
                            Swal.fire({
                                icon: 'warning',
                                title: data.message
                            });
                        }
    
                    } catch (error) {
                        console.log(error);
                        Swal.fire({
                            icon: 'error',
                            title: 'An error occurred',
                            text: error.message
                        });
                    }
                }
            });
        });
    });
    </script>
    

     <script>

    async function updateQuantity(productId, quantityChange){
      const quantity=1
      const errorMessageElement = document.getElementById('error-message');
        const inputElement = document.querySelector(`input[data-product-id="${productId}"]`);
        let newQuantity = parseInt(inputElement.value) + quantityChange;

        if (newQuantity < 1) {
        errorMessageElement.textContent = "Quantity cannot be less than 1.";
        errorMessageElement.style.display = 'block';
        return;
    }


        try{
        const response = await fetch('/update-Quantity',{
            method: 'POST',
            headers:{
                'Content-Type' : 'application/json'
            },
            body: JSON.stringify({productId, quantity: newQuantity})
        })
        const data = await response.json();
        if(response.ok){
            inputElement.value = data.newQuantity;
            updatePrice(productId, data.newQuantity);
            updateTotals();
            errorMessageElement.style.display = 'none';
                Swal.fire({
                    icon: 'success',
                    title: data.message,
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000
                });
            
        }else{
               errorMessageElement.textContent = data.message || 'An error occurred while updating the quantity.';
            errorMessageElement.style.display = 'block';
            inputElement.value = newQuantity - quantityChange;
         inputElement.value = newQuantity - quantityChange;
        }
    }catch(error){
        errorMessageElement.textContent = data.message || 'An error occurred while updating the quantity.';
        errorMessageElement.style.display = 'block';
        inputElement.value = newQuantity - quantityChange;
    }
}

function updatePrice(productId, newQuantity) {
    const priceElement = document.querySelector(`.cart__price[data-product-id="${productId}"] .price-value`);
    const price = parseFloat(document.querySelector(`input[data-product-id="${productId}"]`).dataset.price);
    priceElement.textContent = `₹${(price * newQuantity).toFixed(2)}`;
}

function updateTotals() {
    let subtotal = 0;
    document.querySelectorAll('.price-value').forEach(el => {
        subtotal += parseFloat(el.textContent.replace('₹', ''));
    });
    
    document.querySelector('.subtotal-value').textContent = `₹${subtotal.toFixed(2)}`;
    document.querySelector('.total-value').textContent = `₹${subtotal.toFixed(2)}`;
}
     </script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

 
    <%- include('../layouts/footer.ejs') %>