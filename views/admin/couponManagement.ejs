<%- include('../layouts/adminHeader.ejs') %>
<%- include('../layouts/adminPanelSidebar.ejs') %>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Coupon Management</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <!-- DataTables CSS -->
    <link href="https://cdn.datatables.net/1.13.5/css/jquery.dataTables.min.css" rel="stylesheet">
    <style>
        .mt-5 {
            margin-top: 8.5rem !important;
            margin-left: 18rem;
        }
        #couponTable thead th {
            background-color: #343a40;
            color: #ffffff; /* Optional: white text color for better contrast */
            font-weight: bold;
            font-size: 16px;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h1 class="mb-4">Coupon Management</h1>
        
        <!-- Add New Coupon Button -->
        <button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#addCouponModal">
            Add New Coupon
        </button>
        
        <!-- Coupon List Table -->
        <table id="couponTable" class="table table-striped">
            <thead>
                <tr>
                    <th>Code</th>
                    <th>Discount</th>
                    <th>Type</th>
                    <th>Valid From</th>
                    <th>Valid To</th>
                    <!-- <th>Status</th> -->
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <% coupons.forEach(coupon => { %>
                <tr>
                    <td><%= coupon.couponCode %></td>
                    <td><%= coupon.discountPercent %>%</td>
                    <td>Percentage</td>
                    <td><%= new Date(coupon.validFrom).toLocaleDateString() %></td>
                    <td><%= new Date(coupon.validTo).toLocaleDateString() %></td>
                    <!-- <td><%= coupon.listed ? 'Listed' : 'Unlisted' %></td> -->
                    <td>
                        <!-- <button class="btn btn-sm <%= coupon.listed ? 'btn-secondary' : 'btn-success' %>"
                            onclick="toggleCouponStatus('<%= coupon._id %>', this)">
                            <%= coupon.listed ? 'Unlist' : 'List' %>
                        </button> -->
                        <button class="btn btn-sm btn-warning" onclick="editCoupon('<%= coupon._id %>')">
                            Edit
                        </button>
                        <button class="btn btn-sm btn-danger btn-delete" data-coupon-id="<%= coupon._id %>">Delete</button>
                    </td>
                </tr>
                <% }) %>
            </tbody>
        </table>
    </div>

    <!-- Add Coupon Modal -->
    <form id="addCouponForm">
        <div class="modal fade" id="addCouponModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Add New Coupon</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="addCouponForm" action="/admin/coupons" method="POST">
                            <div class="mb-3">
                                <label for="couponCode" class="form-label">Coupon Code</label>
                                <input type="text" class="form-control" id="couponCode" name="couponCode" required>
                            </div>
                            <div class="mb-3">
                                <label for="discountValue" class="form-label">Discount Value (%)</label>
                                <input type="number" class="form-control" id="discountValue" name="discountPercent" required>
                            </div>
                            <div class="mb-3">
                                <label for="minimumPurchase" class="form-label">Minimum Purchase</label>
                                <input type="number" class="form-control" id="minimumPurchase" name="minimumPurchase" required>
                            </div>
                            <div class="mb-3">
                                <label for="maxRedeem" class="form-label">Max Redeemable Amount</label>
                                <input type="number" class="form-control" id="maxRedeem" name="maxRedeem" required>
                            </div>
                            <div class="mb-3">
                                <label for="validFrom" class="form-label">Valid From</label>
                                <input type="date" class="form-control" id="validFrom" name="validFrom" required>
                            </div>
                            <div class="mb-3">
                                <label for="validTo" class="form-label">Valid To</label>
                                <input type="date" class="form-control" id="validTo" name="validTo" required>
                            </div>
                            <p id="message" style="display:none; color:red;"></p>
                            <button id="addCoupon-btn" type="submit" class="btn btn-primary">Save Coupon</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </form>

  <!-- Edit Coupon Modal -->
<div class="modal fade" id="editCouponModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Coupon</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editCouponForm">
                    <input type="hidden" id="editCouponId" name="couponId">
                    <div class="mb-3">
                        <label for="editCouponCode" class="form-label">Coupon Code</label>
                        <input type="text" class="form-control" id="editCouponCode" name="couponCode" required>
                    </div>
                    <div class="mb-3">
                        <label for="editDiscountValue" class="form-label">Discount Value (%)</label>
                        <input type="number" class="form-control" id="editDiscountValue" name="discountPercent" required>
                    </div>
                    <div class="mb-3">
                        <label for="editMinimumPurchase" class="form-label">Minimum Purchase</label>
                        <input type="number" class="form-control" id="editMinimumPurchase" name="minimumPurchase" required>
                    </div>
                    <div class="mb-3">
                        <label for="editMaxRedeem" class="form-label">Max Redeemable Amount</label>
                        <input type="number" class="form-control" id="editMaxRedeem" name="maxRedeem" required>
                    </div>
                    <div class="mb-3">
                        <label for="editValidFrom" class="form-label">Valid From</label>
                        <input type="date" class="form-control" id="editValidFrom" name="validFrom" required>
                    </div>
                    <div class="mb-3">
                        <label for="editValidTo" class="form-label">Valid To</label>
                        <input type="date" class="form-control" id="editValidTo" name="validTo" required>
                    </div>
                    <button id="editCoupon-btn" type="submit" class="btn btn-primary">Save Changes</button>
                </form>
            </div>
        </div>
    </div>
</div>


 



    <!-- Bootstrap JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <!-- jQuery -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <!-- DataTables JS -->
    <script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>


    <script>
        
        $(document).ready(function() {
            $('#couponTable').DataTable();
        });

    
        $('#couponTable').on('click', '.btn-list', function() {
            const couponId = $(this).data('coupon-id');
            handleCouponStatus(couponId, 'list');
        });

        $('#couponTable').on('click', '.btn-unlist', function() {
            const couponId = $(this).data('coupon-id');
            handleCouponStatus(couponId, 'unlist');
        });

        $('#couponTable').on('click', '.btn-delete', function() {
            const couponId = $(this).data('coupon-id');
        });

        async function toggleCouponStatus(couponId, buttonElement) {
    try {
        const response = await fetch(`/admin/toggle-coupon-status/${couponId}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            }
        });

        const data = await response.json();

        if (data.success) {
            if (data.listed) {
                buttonElement.textContent = 'Unlist';
                buttonElement.classList.remove('btn-success');
                buttonElement.classList.add('btn-secondary');
            } else {
                buttonElement.textContent = 'List';
                buttonElement.classList.remove('btn-secondary');
                buttonElement.classList.add('btn-success');
            }
    
            const statusCell = buttonElement.closest('tr').querySelector('td:nth-child(6)');
            statusCell.textContent = data.listed ? 'Listed' : 'Unlisted';
        } else {
            console.error('Failed to toggle coupon status:', data.message);
        }
    } catch (error) {
        console.error('Error toggling coupon status:', error.message);
    }
}
    </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</body>
</html>

<%- include('../layouts/adminFooter.ejs') %>

<script>
 function editCoupon(couponId) {
    console.log('Fetching coupon data for ID:', couponId);
    fetch(`/admin/coupons/${couponId}`)
        .then(response => {
            if (!response.ok) {
                return response.json().then(err => {
                    throw new Error(`Network response was not ok: ${err.error}`);
                });
            }
            return response.json();
        })
        .then(couponData => {
            console.log('Coupon data received:', couponData);
            // Populate the modal fields
            document.getElementById('editCouponId').value = couponData._id;
            document.getElementById('editCouponCode').value = couponData.couponCode;
            document.getElementById('editDiscountValue').value = couponData.discountPercent;
            document.getElementById('editMinimumPurchase').value = couponData.minPurchase;
            document.getElementById('editMaxRedeem').value = couponData.maxRedeemAmount;
            document.getElementById('editValidFrom').value = couponData.validFrom.split('T')[0];
            document.getElementById('editValidTo').value = couponData.validTo.split('T')[0];

            // Show the modal
            const editModal = new bootstrap.Modal(document.getElementById('editCouponModal'));
            editModal.show();
        })
        .catch(error => {
            console.error('Error fetching coupon data:', error);
        });
}
 
// Dummy function to simulate fetching coupon data
function getCouponData(couponId) {
    // Replace this with actual AJAX call or data retrieval logic
    return {
        _id: couponId,
        code: 'SAVE20',
        discountPercent: 20,
        minimumPurchase: 50,
        maxRedeem: 100,
        validFrom: '2024-01-01',
        validTo: '2024-12-31',
    };
}



    document.getElementById('addCoupon-btn').addEventListener('click', async function (event){
        event.preventDefault();

        const form = document.getElementById('addCouponForm');
        const couponCode = document.getElementById('couponCode').value;
        const discountPercent = document.getElementById('discountValue').value;
        const minimumPurchase = document.getElementById('minimumPurchase').value;
        const maxRedeemAmount = document.getElementById('maxRedeem').value;
        const validFrom = document.getElementById('validFrom').value;
        const validTo = document.getElementById('validTo').value;
        const message = document.getElementById('message');

        message.style.display = 'none';

        const errorMessage = validateCouponForm(couponCode, discountPercent, minimumPurchase, maxRedeemAmount, validFrom, validTo);

        if (errorMessage) {
            message.style.display = 'block';
            message.textContent = errorMessage;
            return;
        }

        const formData = {
            couponCode: couponCode,
            discountPercent: discountPercent,
            minPurchase: minimumPurchase,
            maxRedeemAmount: maxRedeemAmount,
            validFrom: validFrom,
            validTo: validTo
        }

        try {
            const response = await fetch('/admin/add-coupon', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            });
            const data = await response.json();

            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: data.message
                }).then(() => {
                    window.location.reload()
                });
            } else {
                Swal.fire({
                    icon: 'warning',
                    title: data.message
                });
            }
            
        } catch (error) {
            console.error(error);
            Swal.fire({
                icon: 'error',
                title: 'An error occurred',
                text: 'Please try again later.'
            });
        }
    });

    function validateCouponForm(couponCode, discountPercent, minimumPurchase, maxRedeemAmount, validFrom, validTo) {
        let message = '';
        let codeRegex = /^[A-Za-z0-9]{5,10}$/;
        let discountRegex = /^([1-9]|[1-9][0-9]|100)$/;  
        let numberRegex = /^[0-9]+(\.[0-9]+)?$/;

        if (!codeRegex.test(couponCode) || couponCode[0] == ' ') {
            message = "Coupon code must be 5-10 characters long and contain only letters and numbers.";
        } else if (!discountRegex.test(discountPercent)) {
            message = "Discount value must be a number between 1 and 100.";
        } else if (!numberRegex.test(minimumPurchase) || minimumPurchase <= 0) {
            message = "Minimum purchase must be a positive number.";
        } else if (!numberRegex.test(maxRedeemAmount) || maxRedeemAmount <= 0) {
            message = "Max redeem must be a positive number.";
        } else if (new Date(validFrom) > new Date(validTo)) {
            message = "Valid From date cannot be after Valid To date.";
        }

        return message;
    }
</script>
 


 <script>
     document.getElementById('editCouponForm').addEventListener('submit', function(event) {
    event.preventDefault(); // Prevent default form submission

    const couponCode = document.getElementById('editCouponCode').value;
    const discountPercent = document.getElementById('editDiscountValue').value;
    const minimumPurchase = document.getElementById('editMinimumPurchase').value;
    const maxRedeemAmount = document.getElementById('editMaxRedeem').value;
    const validFrom = document.getElementById('editValidFrom').value;
    const validTo = document.getElementById('editValidTo').value;
    const message = document.getElementById('message'); // Ensure you have a message element for showing errors

    message.style.display = 'none';

    const errorMessage = validateCouponForm(couponCode, discountPercent, minimumPurchase, maxRedeemAmount, validFrom, validTo);

    if (errorMessage) {
        message.style.display = 'block';
        message.textContent = errorMessage;
        return;
    }



    const formData = new FormData(this);
    fetch('/admin/update-coupon', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(Object.fromEntries(formData))
    })
    .then(response => {
        if (!response.ok) {
            return response.json().then(err => {
                throw new Error(`Network response was not ok: ${err.error}`);
            });
        }
        return response.json();
    })
    .then(data => {
        console.log('Coupon updated successfully:', data);
        // Hide the modal
        const editModal = bootstrap.Modal.getInstance(document.getElementById('editCouponModal'));
        editModal.hide();
        // Show success message using SweetAlert
        Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: 'Coupon updated successfully',
            confirmButtonColor: '#3085d6',
            confirmButtonText: 'OK'
        }).then((result) => {
            // Refresh the page after the user clicks 'OK'
            if (result.isConfirmed) {
                window.location.reload();
            }
        });
    })
    .catch(error => {
        console.error('Error updating coupon:', error);
        // Show error message using SweetAlert
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Failed to update coupon. Please try again.',
            confirmButtonColor: '#d33',
            confirmButtonText: 'OK'
        });
    });
});

document.querySelectorAll('.btn-delete').forEach(button => {
    button.addEventListener('click', async function() {
        const couponId = this.getAttribute('data-coupon-id');
        const action = 'delete'; // Set your action here

        const confirmDelete = await Swal.fire({
            title: `Are you sure you want to ${action} this coupon?`,
            text: `You are about to ${action} the coupon.`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: `Yes, ${action} coupon`,
            cancelButtonText: 'Cancel'
        });

        if (confirmDelete.isConfirmed) {
            fetch(`/admin/delete-coupon/${couponId}`, {
                method: 'PATCH'
            })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(err => {
                        throw new Error(`Network response was not ok: ${err.error}`);
                    });
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Deleted!',
                        text: 'Coupon deleted successfully.',
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        window.location.reload(); // Refresh the page
                    });
                } else {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Warning!',
                        text: data.message,
                        confirmButtonColor: '#d33',
                        confirmButtonText: 'OK'
                    });
                }
            })
            .catch(error => {
                console.error('Error deleting coupon:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Failed to delete coupon. Please try again.',
                    confirmButtonColor: '#d33',
                    confirmButtonText: 'OK'
                });
            });
        }
    });
});


 </script>

 
    