<%- include('../layouts/adminHeader.ejs') %>
<%- include('../layouts/adminPanelSidebar.ejs') %>


<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.1/css/dataTables.bootstrap5.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/5.3.0/css/bootstrap.min.css">
    
    <style>

        /* style for view detail button */
        .btn-primary {
    background-color: #007bff;  
    border: none;
    color: #fff;
    padding: 10px 20px;
    font-size: 16px;
    font-weight: 500;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    border-radius: 5px;
    transition: background-color 0.3s ease, transform 0.3s ease;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .btn-primary:hover {
    background-color: #0056b3; 
    transform: translateY(-2px);  
    }
    
    .btn-primary:active {
    background-color: #004085;  
    transform: translateY(0); 
    }
    
    .btn-primary:focus {
    outline: none;
    box-shadow: 0px 0px 10px rgba(0, 123, 255, 0.5);
    }
    
    
    
    /* Style for the Orders Table */
    #orderTable {
        width: 100%;
        border-collapse: collapse;
        margin: 20px 0;
        font-size: 16px;
        text-align: left;
        background-color: #f9f9f9;
    }
    .mt-4 {
        margin-top: 8.5rem !important;
        margin-left: 18rem;
    }
    
    #orderTable thead {
        background-color: #343a40;
        color: #ffffff;
    }
    
    #orderTable thead th {
        padding: 12px 15px;
        border-bottom: 2px solid #dee2e6;
        font-weight: bold;
    }
    
    #orderTable tbody tr:nth-child(even) {
        background-color: #f2f2f2;
    }
    
    #orderTable tbody tr:hover {
        background-color: #e9ecef;
    }
    
    #orderTable tbody td {
        padding: 12px 15px;
        border-bottom: 1px solid #dee2e6;
        vertical-align: middle;
    }
    
    #orderTable tbody td button {
        padding: 8px 12px;
        background-color: #007bff;
        color: #ffffff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }
    
    #orderTable tbody td button:hover {
        background-color: #0056b3;
    }
    
    /* style for dropdown */
    
    .order-status {
        width: 100%;
        padding: 8px 12px;
        border-radius: 4px;
        border: 1px solid #dee2e6;
        background-color: #ffffff;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }
    
    .order-status:hover {
        background-color: #e9ecef;
    }
    
    
    </style>

</head>
<body>
    <div class="container mt-4">
        <h2>Order List</h2>
        <table id="orderTable" class="table table-striped table-bordered" style="width:90%">
            <thead>
                <tr>
                    <!-- <th>Order ID</th> -->
                    <th>Product</th>
                    <th>Quantity</th>
                    <th>Total Price</th>
                    <th>Customer Name</th>
                    <th>Payment</th>
                    <th>Order Date</th>
                    <th>Order Status</th>
                    <th>Details</th>
                </tr>
            </thead>
            <tbody>
                <% orders.forEach(order => { %>
                    <% order.orderedItems.forEach(item => { %>
                <tr>
                    <td><%= item.productId.name  %></td>    
                    <td><%= item.quantity  %></td>
                    <td><%= item.totalPrice  %></td>
                    <td><%= order.address.Name  %></td>
                    <td><%= order.paymentMethod  %></td>
                    <td><%= order.orderDate.toISOString().split('T')[0] %></td>
                    <td>
                        <% if (item.orderStatus === 'Cancelled') { %>
                            <p>Cancelled</p>
                        <% } else if (item.orderStatus === 'Return requested') { %>
                            <p>Return requested</p>
                        <% } else if (item.returnStatus === 'approved') { %>
                            <p>Returned</p>
                        <% } else if (item.orderStatus === 'Delivered' || item.returnStatus === 'rejected') { %>
                            <p>Delivered</p>
                        <% } else { %>
                            <select class="form-select order-status" data-order-id="<%= order._id %>" data-item-id="<%= item._id %>" data-return-status="<%= item.returnStatus %>">
                                <option value="Pending" <%= item.orderStatus === 'Pending' ? 'selected' : '' %>>Pending</option>
                                <option value="Processing" <%= item.orderStatus === 'Processing' ? 'selected' : '' %>>Processing</option>
                                <option value="Shipped" <%= item.orderStatus === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                                <option value="Delivered" <%= item.orderStatus === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                                <option value="Order confirmed" <%= item.orderStatus === 'Order confirmed' ? 'selected' : '' %>>Order confirmed</option>
                            </select>
                        <% } %>
                    </td>
                    
                    <td>
                        <a href="/admin/order-details/<%= order._id %>" class="btn btn-primary">View Details</a>
                    </td>
                    
                </tr>
                <% }) %>
                <% }) %>
            </tbody>
        </table>
    </div>
    
    <!-- Toastify CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <!-- Toastify JS -->
    <script src="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.js"></script>

    <script src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <script src="https://cdn.datatables.net/1.13.1/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.1/js/dataTables.bootstrap5.min.js"></script>
     
</body>
</html>

<%- include('../layouts/adminFooter.ejs') %>
 
<script>
    $(document).ready(function() {
    console.log('Document is ready');

    try {
        $('#orderTable').DataTable({
            "processing": true,
            "serverSide": true,
            "ajax": "/admin/orders",
            "columns": [
                { "data": "_id" },
                { "data": "address.Name" },
                { "data": "orderedItems.productId.name" },
                { "data": "orderedItems.quantity" },
                { "data": "orderedItems.totalPrice" },
                { "data": "paymentStatus" },
                { "data": "orderDate" },
                {
                    "data": "orderedItems.orderStatus",
                    "render": function(data, type, row) {
                        // Render status based on its current value
                        if (data === 'Delivered' || data === 'Returned') {
                            return `<span>${data}</span>`;
                        } else {
                            return `<select class="order-status" data-order-id="${row._id}" data-item-id="${row.orderedItems._id}" data-return-status="${row.returnStatus}">
                                        <option value="Pending" ${data === 'Pending' ? 'selected' : ''}>Pending</option>
                                        <option value="Processing" ${data === 'Processing' ? 'selected' : ''}>Processing</option>
                                        <option value="Shipped" ${data === 'Shipped' ? 'selected' : ''}>Shipped</option>
                                        <option value="Delivered" ${data === 'Delivered' ? 'selected' : ''}>Delivered</option>
                                        <option value="Order confirmed" ${data === 'Order confirmed' ? 'selected' : ''}>Order confirmed</option>
                                    </select>`;
                        }
                    }
                },
                { "data": null, "defaultContent": '<button class="btn btn-primary">View Details</button>' }
            ],
            "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
            "responsive": true
        });
    } catch (error) {
        console.error('Error initializing DataTable:', error);
    }

    $('#orderTable').on('change', '.order-status', async function(e) {
        const $select = $(this);
        const previousStatus = $select.data('previous-status') || $select.find('option:selected').text();
        const newStatus = $select.val();

        // Ensure the previous status isn't editable if it was Delivered or Returned
        // if (previousStatus === 'Delivered' || previousStatus === 'Returned') {
        //     e.preventDefault();
        //     alert('Cannot change status once Delivered or Returned.');
        //     $select.val(previousStatus);
        //     return;
        // }

        const orderId = $select.data('order-id');
        const itemId = $select.data('item-id');

        try {
            const response = await fetch('/admin/update-orderstatus', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    orderId: orderId,
                    itemId: itemId,
                    orderStatus: newStatus
                })
            });

            const result = await response.json();

            if (response.ok) {
                Toastify({
                        text: result.message || 'Order status updated successfully',
                        backgroundColor: 'linear-gradient(to right, #00b09b, #96c93d)',
                        duration: 3000
                    }).showToast();
                $select.data('previous-status', newStatus);

                // Replace the dropdown with plain text if the new status is Delivered or Returned
                if (newStatus === 'Delivered' || newStatus === 'Returned') {
                    $select.replaceWith(`<span>${newStatus}</span>`);
                }
            } else {
                Toastify({
                        text: result.message || 'Error updating order status',
                        backgroundColor: 'linear-gradient(to right, #ff5f6d, #ffc371)',
                        duration: 3000
                    }).showToast();
                $select.val(previousStatus);
            }
        } catch (error) {
            console.error('Error:', error);
            Toastify({
                    text: 'Error updating order status',
                    backgroundColor: 'linear-gradient(to right, #ff5f6d, #ffc371)',
                    duration: 3000
                }).showToast();
            $select.val(previousStatus);
        }
    });

    // Function to dynamically update order status based on return status
    async function updateOrderStatusIfNeeded() {
        const rows = $('#orderTable').find('tr');

        for (const row of rows) {
            const $row = $(row);
            const itemId = $row.find('.order-status').data('item-id');
            const returnStatus = $row.find('.order-status').data('return-status');

            if (returnStatus === 'approved') {
                // This is an AJAX call to update the order status based on return status
                try {
                    const response = await fetch('/admin/orders/update-status', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            itemId: itemId,
                            orderStatus: 'Returned'
                        })
                    });

                    const result = await response.json();

                    if (response.ok) {
                        $row.find('.order-status').replaceWith('<span>Returned</span>');
                    } else {
                        console.error('Failed to update order status:', result.message);
                    }
                } catch (error) {
                    console.error('Error:', error);
                }
            }   
        }
    }

    // Call the function to ensure the status is updated when the document is ready
    updateOrderStatusIfNeeded();
});

</script>


<!-- <script>
    $(document).ready(function() {
        console.log('Document is ready');

        try {
            $('#orderTable').DataTable({
                "processing": true,
                "serverSide": true,
                "ajax": "/admin/orders",
                "columns": [
                    { "data": "_id" },
                    { "data": "address.Name" },
                    { "data": "orderedItems.productId.name" },
                    { "data": "orderedItems.quantity" },
                    { "data": "orderedItems.totalPrice" },
                    { "data": "paymentStatus" },
                    { "data": "orderDate" },
                    {
                        "data": "orderedItems.orderStatus",
                        "render": function(data, type, row) {
            
                            if (data === 'Delivered' || data === 'Returned') {
                                return `<span>${data}</span>`;
                            } else {
                                return `<select class="order-status" data-order-id="${row._id}" data-item-id="${row.orderedItems._id}">
                                            <option value="Pending" ${data === 'Pending' ? 'selected' : ''}>Pending</option>
                                            <option value="Processing" ${data === 'Processing' ? 'selected' : ''}>Processing</option>
                                            <option value="Shipped" ${data === 'Shipped' ? 'selected' : ''}>Shipped</option>
                                            <option value="Delivered" ${data === 'Delivered' ? 'selected' : ''}>Delivered</option>
                                            <option value="Cancelled" ${data === 'Cancelled' ? 'selected' : ''}>Cancelled</option>
                                            <option value="Returned" ${data === 'Returned' ? 'selected' : ''}>Returned</option>
                                        </select>`;
                            }
                        }
                    },
                    { "data": null, "defaultContent": '<button class="btn btn-primary">View Details</button>' }
                ],
                "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                "responsive": true
            });
        } catch (error) {
            console.error('Error initializing DataTable:', error);
        }

        $('#orderTable').on('change', '.order-status', async function(e) {
            const $select = $(this);
            const previousStatus = $select.data('previous-status') || $select.find('option:selected').text();
            const newStatus = $select.val();

            if (previousStatus === 'Delivered' || previousStatus === 'Returned') {
                e.preventDefault();
                alert('Cannot change status once Delivered or Returned.');
                $select.val(previousStatus);
                return;
            }

            const orderId = $select.data('order-id');
            const itemId = $select.data('item-id');

            try {
                const response = await fetch('/admin/orders', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        orderId: orderId,
                        itemId: itemId,
                        orderStatus: newStatus
                    })
                });

                const result = await response.json();

                if (response.ok) {
                    alert(result.message || 'Order status updated successfully');
                    $select.data('previous-status', newStatus);

                    if (newStatus === 'Delivered' || newStatus === 'Returned') {
                        $select.replaceWith(`<span>${newStatus}</span>`);
                    }
                } else {
                    alert(result.message || 'Error updating order status');
                    $select.val(previousStatus);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error updating order status');
                $select.val(previousStatus);
            }
        });
    });
</script> -->


 
