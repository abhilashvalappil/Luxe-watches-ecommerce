<%- include('../layouts/adminHeader.ejs') %>
<%- include('../layouts/adminPanelSidebar.ejs') %>


    <!--start main wrapper-->
    <main class="main-wrapper">
      <div class="main-content">
        <!--breadcrumb-->
        <div class="page-breadcrumb d-none d-sm-flex align-items-center mb-3">
          <div class="breadcrumb-title pe-3">LuxeWatches</div>
          <div class="ps-3">
            <nav aria-label="breadcrumb">
              <ol class="breadcrumb mb-0 p-0">
                <li class="breadcrumb-item"><a href="javascript:;"><i class="bx bx-home-alt"></i></a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">Edit Product</li>
              </ol>
            </nav>
          </div>



        </div>
        <!--end breadcrumb-->
        <form id="editProductForm" method="post" action="/admin/editproduct" enctype="multipart/form-data">
          <input type="hidden" id="productId" name="productId" value="<%= product._id %>">
          <div class="row">
            <div class="col-12 col-lg-8">
              <div class="card">
                <div class="card-body">
                  <div class="mb-4">
                    <h5 class="mb-3">Name</h5>
                    <input type="text" id="name" name="name" value="<%= product.name%>" class="form-control" placeholder="write product name here....">
                    <div id="name-error" class="message" style="color: red;"></div>
                  </div>
                  <div class="mb-4">
                    <h5 class="mb-3">Product Description</h5>
                    <textarea class="form-control" id="description" name="description" cols="4" rows="6"
                      placeholder="write a description here.."><%= product.description%></textarea>
                    <div id="description-error" class="message" style="color: red;"></div>
                  </div>
                  <div class="mb-4">
                    <h5 class="mb-3">Add Images</h5>
                    <div class="image-upload-container" style="display: flex; flex-wrap: wrap; gap: 10px;">
                      <!-- Image 1 -->
                      <div class="image-upload">
                        <label class="btn btn-primary">Upload Image 1
                          <!-- <input type="file" name="image1" accept=".jpg, .png, image/jpeg, image/png" hidden onchange="previewImage(event, 'imagePreview1')"> -->
                          <input type="file" name="image1" accept=".jpg, .png, image/jpeg, image/png" hidden onchange="openCropModal(event, 'imagePreview1')">
                        </label>
                        <% if(product.images[0]) { %>
                          <img id="imagePreview1" src="/uploadedImages/<%= product.images[0] %>" alt="Image 1 Preview" style="display: block; max-width: 100px;">
                          <button type="button" class="btn btn-danger" onclick="removeImage('image1')">Remove</button>
                        <% } %>
                      </div>
                      
                      <!-- Image 2 -->
                      <div class="image-upload">
                        <label class="btn btn-primary">Upload Image 2
                          <input type="file" name="image2" accept=".jpg, .png, image/jpeg, image/png" hidden onchange="openCropModal(event, 'imagePreview2')">
                        </label>
                        <% if(product.images[1]) { %>
                          <img id="imagePreview2" src="/uploadedImages/<%= product.images[1] %>" alt="Image 2 Preview" style="display: block; max-width: 100px;">
                          <button type="button" class="btn btn-danger" onclick="removeImage('image2')">Remove</button>
                        <% } %>
                      </div>
                      
                      <!-- Image 3 -->
                      <div class="image-upload">
                        <label class="btn btn-primary">Upload Image 3
                          <input type="file" name="image3" accept=".jpg, .png, image/jpeg, image/png" hidden onchange="openCropModal(event, 'imagePreview3')">
                        </label>
                        <% if(product.images[2]) { %>
                          <img id="imagePreview3" src="/uploadedImages/<%= product.images[2] %>" alt="Image 3 Preview" style="display: block; max-width: 100px;">
                          <button type="button" class="btn btn-danger" onclick="removeImage('image3')">Remove</button>
                        <% } %>
                      </div>
                    </div>
                    <div id="image-error" class="message" style="color: red; font-weight: bold;"></div>
                  </div>
                  <!-- /////////////////////////// -->
                  <div class="mb-4" style="margin-top: 60px;">
                    <h5 class="mb-3">Inventory</h5>

                    <div class="row g-3">
                      <!-- <div class="col-12">
                        <label for="Collection" class="form-label">Price</label>
                        <input type="text" class="form-control" id="Collection" placeholder="Enter Price">
                      </div> -->

                      <div class="d-flex gap-3">
                        <div class="flex-fill">
                          <label for="OriginalPrice" class="form-label">Selling Price</label>
                          <input type="number" class="form-control" id="price" name="price" value="<%= product.price%>" placeholder="Enter Price">
                          <div id="price-error" class="message" style="color: red;"></div>
                        </div>
                        <!-- <div class="flex-fill">
                            <label for="DiscountedPrice" class="form-label">Discounted Price</label>
                            <input type="text" class="form-control" id="DiscountedPrice" placeholder="Enter Discounted Price" oninput="calculateDiscount()">
                        </div> -->
                        <!-- <div class="flex-fill">
                            <label for="DiscountPercentage" class="form-label">Discount Percentage</label>
                            <input type="text" class="form-control" id="DiscountPercentage" placeholder="Discount Percentage" readonly>
                        </div> -->
                      </div>


                      <div style="margin-top: 40px;">
                        <h5 style="margin-bottom: 20px;">Organize</h5>

                        <div class="d-flex gap-3">
                          <div class="flex-fill">
                            <label for="AddCategory" class="form-label">Category</label>
                            <select class="form-select" id="AddCategory" name="category">
                              <% if(categoryData.length !== 0){ %>
                              <% for(let i=0; i<categoryData.length; i++) { %>
                              <option value="<%= categoryData[i]._id %>" <% if (categoryData[i]._id === product.category) { %> selected <% } %>><%= categoryData[i].name %></option>
                              <% } %>
                              <% } %>
                            </select>
                          </div>

                          <div class="flex-fill">
                            <label for="addBrand" class="form-label">Brand</label>
                            <select class="form-select" id="addBrand" name="brand">
                              <% if(brandData.length !== 0){ %>
                              <% for(let i=0; i<brandData.length; i++) { %>
                              <option value="<%= brandData[i]._id %>" <% if (brandData[i]._id === product.brand) { %> selected <% } %>><%= brandData[i].brandName %></option>
                              <% } %>
                              <% } %>
                            </select>
                          </div>

                          <!-- <div class="flex-fill">
                            <label for="Brand" class="form-label">Brand</label>
                            <input type="text" class="form-control" id="brand" name="brand"value=""  placeholder="Enter Brand Name">
                            <div id="brand-error" class="message" style="color: red;"></div>
                          </div> -->
                          <div class="flex-fill">
                            <label for="Model" class="form-label">Model</label>
                            <input type="text" class="form-control" id="model" name="model" value="<%= product.model%>" placeholder="Enter Model">
                            <div id="model-error" class="message" style="color: red;"></div>
                          </div>
                        </div>

                        <div class="col-12" style="margin-top: 40px;">
                          <!-- <h5 class="mb-3">Additional Details</h5> -->
                          <div class="d-flex gap-3">
                            <div class="flex-fill">
                              <label for="DialColor" class="form-label">Dial Color</label>
                              <input type="text" class="form-control" id="dialColor" name="dialColor" value="<%= product.dialColor%>" placeholder="Enter Dial Color">
                              <div id="dialColor-error" class="message" style="color: red;"></div>
                            </div>
                            <div class="flex-fill">
                              <label for="StrapColor" class="form-label">Strap Color</label>
                              <input type="text" class="form-control" id="strapColor" name="strapColor" value="<%= product.strapColor%>" placeholder="Enter Strap Color">
                              <div id="strap-error" class="message" style="color: red;"></div>
                            </div>
                            <div class="flex-fill">
                              <label for="InStock" class="form-label">In Stock</label>
                              <input type="number" class="form-control" id="quantity" name="stock" value="<%= product.stock%>"
                                placeholder="Enter Stock Quantity">
                              <div id="stock-error" class="message" style="color: red;"></div>
                            </div>
                          </div>
                        </div>

                        <div class="d-flex align-items-center gap-3" style="margin-top: 80px;">
                          <button type="button" class="btn btn-outline-danger flex-fill"><i
                              class="bi bi-x-circle me-2"></i>Discard</button>
                          <button id="savebutton" type="submit" class="btn btn-outline-success flex-fill"><i
                              class="bi bi-cloud-download me-2"></i>Save</button>
                        </div>

                        <div class="col-12 col-lg-9">
                          <div class="tab-content">

                            <div class="tab-pane fade show active" id="Shipping">
                              <div class="d-flex flex-column h-100">

                                <div class="flex-1">

                                </div>
                                <div class="mb-4">
                                  <div class="form-check mb-1">

                                  </div>
                                </div>
                                <!-- <p class="fs--1 fw-semi-bold mb-0">See our <a class="fw-bold" href="#!">Delivery terms and conditions </a>for details.</p> -->
                              </div>
                            </div>


                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div class="col-12 col-lg-4">


              </div>

            </div><!--end row-->
          </div>
        </form>
    </main>
    <!--end main wrapper-->

    <div class="modal fade" id="cropperModal" tabindex="-1" aria-labelledby="cropperModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="cropperModalLabel">Crop Image</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div class="img-container">
              <img id="imageToCrop" />
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="button" class="btn btn-primary" onclick="cropImage()">Crop & Save</button>
          </div>
        </div>
      </div>
    </div>
  </div>

    <link href="https://cdn.jsdelivr.net/npm/cropperjs@1.5.13/dist/cropper.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/cropperjs@1.5.13/dist/cropper.min.js"></script>

    <!--start overlay-->
    <div class="overlay btn-toggle"></div>

    <script>
 let cropper;
let fileInput;
let croppedImageDataURL;
let previewId;

// Function to open the cropper modal
function openCropModal(event, prevId) {
  fileInput = event.target;  // Capture the file input element
  previewId = prevId;  // Capture the preview image ID

  const reader = new FileReader();

  reader.onload = function (e) {
    const image = document.getElementById('imageToCrop');
    image.src = e.target.result;

    // Open Bootstrap modal
    const cropperModal = new bootstrap.Modal(document.getElementById('cropperModal'));
    cropperModal.show();

    // Initialize Cropper.js
    cropper = new Cropper(image, {
      aspectRatio: 1, // Change the aspect ratio if needed
      viewMode: 1,
      preview: '.img-preview',
    });
  };

  reader.readAsDataURL(fileInput.files[0]);  // Read the file
}

// Function to crop the image
function cropImage() {
  const canvas = cropper.getCroppedCanvas({
    width: 300,  // Adjust the width and height as needed
    height: 300,
  });

  // Convert cropped canvas to data URL
  croppedImageDataURL = canvas.toDataURL('image/png');

  // Set the preview image source to the cropped image (based on the previewId)
  const imagePreview = document.getElementById(previewId);
  imagePreview.src = croppedImageDataURL;
  imagePreview.style.display = 'block';

  // Convert the cropped data URL to a Blob
  canvas.toBlob((blob) => {
    // Create a new File object from the blob and assign it to the file input
    const croppedFile = new File([blob], 'cropped-image.png', { type: 'image/png' });

    // Create a DataTransfer to replace the input file with the cropped file
    const dataTransfer = new DataTransfer();
    dataTransfer.items.add(croppedFile);

    // Replace the file input value with the cropped file
    fileInput.files = dataTransfer.files;
  });

  // Close the modal
  const cropperModal = bootstrap.Modal.getInstance(document.getElementById('cropperModal'));
  cropperModal.hide();

  // Destroy the cropper instance after cropping
  cropper.destroy();
}

    </script>


    <!--end overlay-->
    <script>
      function previewImage(event, imagePreviewId) {
        const input = event.target;
        const reader = new FileReader();
        reader.onload = function () {
          const dataURL = reader.result;
          const imagePreview = document.getElementById(imagePreviewId);
          imagePreview.src = dataURL;
          imagePreview.style.display = 'block';
        };
        reader.readAsDataURL(input.files[0]);
      }

  //     function removeImage(imageField) {
  //   const input = document.querySelector(`input[name="${imageField}"]`);
  //   input.value = ''; // Clear the file input
  //   const imagePreview = document.getElementById(`imagePreview${imageField.charAt(imageField.length - 1)}`);
  //   imagePreview.src = ''; // Clear the preview image
  //   imagePreview.style.display = 'none'; // Hide the preview
  // }
  function removeImage(imageInputName) {
    const imagePreviewId = 'imagePreview' + imageInputName.charAt(imageInputName.length - 1); // Match preview ID with input
    document.querySelector(`input[name="${imageInputName}"]`).value = ""; // Clear the file input
    document.getElementById(imagePreviewId).src = ""; // Clear the image preview
    document.getElementById(imagePreviewId).style.display = "none"; // Hide the preview image
}

    
      document.getElementById('savebutton').addEventListener('click', async function (event) {
        event.preventDefault();

        const image1 = document.querySelector('input[name="image1"]').files[0];
    const image2 = document.querySelector('input[name="image2"]').files[0];
    const image3 = document.querySelector('input[name="image3"]').files[0];

    // Count the number of uploaded images
    let uploadedImagesCount = 0;
    if (image1) uploadedImagesCount++;
    if (image2) uploadedImagesCount++;
    if (image3) uploadedImagesCount++;

    // Count the number of existing images (those already shown in the form)
    let existingImagesCount = 0;
    if (document.getElementById('imagePreview1').src && document.getElementById('imagePreview1').style.display !== "none") existingImagesCount++;
    if (document.getElementById('imagePreview2').src && document.getElementById('imagePreview2').style.display !== "none") existingImagesCount++;
    if (document.getElementById('imagePreview3').src && document.getElementById('imagePreview3').style.display !== "none") existingImagesCount++;
    
    // Total images (existing + newly uploaded)
    const totalImagesCount = uploadedImagesCount + existingImagesCount;

    // Check if at least 3 images are present (either uploaded or existing)
    if (totalImagesCount < 3) {
        document.getElementById('image-error').textContent = 'Please ensure there are at least three images before submitting the form.';
        
        // Show SweetAlert for better user experience
        Swal.fire({
            icon: 'error',
            title: 'Missing Images',
            text: 'Please upload at least three images before submitting the form.'
        });
        
        return;  // Prevent form submission
    } else {
        document.getElementById('image-error').textContent = ''; // Clear error message
    }
        
    
        const form = document.getElementById('editProductForm');
        let formData = new FormData(form);

        formData.category =  document.getElementById('AddCategory').value;
        formData.brand = document.getElementById('addBrand').value;
        const name = document.getElementById('name').value.trim();
        const description = document.getElementById('description').value.trim();
        const price = document.getElementById('price').value.trim();
        const model = document.getElementById('model').value.trim();
        const dialColor = document.getElementById('dialColor').value.trim();
        const strapColor = document.getElementById('strapColor').value.trim();
        const stock = document.getElementById('quantity').value.trim();
    
        // const nameRegex = /^[a-zA-Z0-9\s]+$/;
        const nameRegex = /^(?=.*[a-zA-Z])[a-zA-Z0-9\s]+$/;
        if (!nameRegex.test(name) || name.length < 5) {
          showError('name-error', 'Name must be required and contain only alphabets, spaces, and numbers and at least 5 characters long.');
          return;
        } else {
          hideError('name-error');
        }
    
        const descriptionRegex = /^[a-zA-Z0-9\s!"#$%&'()*+,-./:;<=>?@[\\\]^_`{|}~]+$/;
        if (!descriptionRegex.test(description) || description.length < 6) {
          showError('description-error', 'Description must contain only alphabets, spaces, numbers, and symbols, and must be at least 6 characters long.')
          return;
        } else {
          hideError('description-error');
        }
    
        const priceRegex = /^\d+$/;
        if (!priceRegex.test(price) || price <= 0) {
          showError('price-error', 'Invalid Price!')
          return;
        } else {
          hideError('price-error');
        }
    
        // const modelRegex = /^[a-zA-Z0-9\s-]{1,20}$/;
         const modelRegex = /^[a-zA-Z0-9][a-zA-Z0-9\s_-]{0,18}[a-zA-Z0-9]$/;
        if (!modelRegex.test(model) || model.length < 1) {
          showError('model-error', 'Model cannot be empty, cannot exceed 20 characters in length, and must contain only alphanumeric characters, spaces, or dashes.')
          return;
        } else {
          hideError('model-error');
        }
    
        const dialRegex = /^[a-zA-Z\s]+$/;
        if (!dialRegex.test(dialColor) || dialColor.length < 3) {
          showError('dialColor-error', 'Dial color cannot be empty and must only contain letters and spaces, and be at least 3 characters in length.')
          return;
        } else {
          hideError('dialColor-error')
        }
    
        const strapRegex = /^[a-zA-Z\s-]{3,30}$/;
        if (!strapRegex.test(strapColor) || strapColor.length < 3) {
          showError('strap-error', 'Strap color is invalid. Please use only letters, spaces, or dashes and ensure the length is between 3 and 30 characters.')
          return;
        } else {
          hideError('strap-error')
        }
    
        const stockRegex = /^\d+$/;
        if (!stockRegex.test(stock) || stock < 0) {
          showError('stock-error', 'Invalid stock value. Ensure it is a positive integer without any spaces or symbols.')
          return;
        } else {
          hideError('stock-error')
        }
    
        try {
          const response = await fetch('/admin/editproduct', {
            method: 'POST',
            body: formData
          });
    
          const data = await response.json();
    
          if (data.success) {
            Swal.fire({
              icon: 'success',
              title: data.message
            }).then(() => {
              window.location.href = '/admin/products';
            });
          } else {
            Swal.fire({
              icon: 'warning',
              title: data.warning
            }).then(() => {
              window.location.href = '/admin/products';
            });
          }
        } catch (error) {
          Swal.fire({
            icon: 'error',
            title: 'An error occurred',
            text: error.warning
          });
        }
      });
    
      function showError(errorId, message) {
        let errorElement = document.getElementById(errorId);
        errorElement.textContent = message;
      }
    
      function hideError(errorId) {
        let errorElement = document.getElementById(errorId);
        errorElement.textContent = '';
      }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    

       <%- include('../layouts/adminFooter.ejs') %>